Manager Tasks
========================

This page outlines all of the tasks that the FireSim manager supports.

.. _firesim-managerinit:

``firesim managerinit``
----------------------------

This is a setup command that does the following:

* Run ``aws configure``, prompt for credentials
* Replace the default config files (``config_runtime.ini``, ``config_build.ini``, ``config_build_recipes.ini``, and ``config_hwdb.ini``) with clean example versions.
* Prompt the user for email address and subscribe them to notifications for their own builds.

You can re-run this whenever you want to get clean configuration files -- you
can just hit enter when prompted for aws configure credentials and your email
address, and both will keep your previously specified values.

If you run this command by accident and didn't mean to overwrite your
configuration files, you'll find backed-up versions in
``firesim/deploy/sample-backup-configs/backup*``.


.. _firesim-buildafi:

``firesim buildafi``
----------------------

This command builds a FireSim AGFI (FPGA Image) from the Chisel RTL for the
configurations that you specify. The process of defining configurations to
build is explained in the documentation for :ref:`config-build` and
:ref:`config-build-recipes`.

For each config, the build process entails:

1. [Locally] Run the elaboration process for your hardware configuration

2. [Locally] FAME-1 transform the design with MIDAS

3. [Locally] Attach simulation models (I/O widgets, memory model, etc.)

4. [Locally] Emit Verilog to run through the AWS FPGA Flow

5. Launch an FPGA Dev AMI build instance for each configuration you want built.

6. [Local/Remote] Prep build instances, copy generated verilog for hardware configuration to buidl instance.

7. [Remote] Run Vivado Synthesis and P&R for the configuration

8. [Local/Remote] Copy back all output generated by Vivado, including the final tar file

9. [Local/AWS Infra] Submit the tar file to the AWS backend for conversion to an AFI

10. [Local] Wait for the AFI to become available, then notify the user of completion by email.

This process happens in parallel for all of the builds you specify. The command
will exit when all builds are completed (but you will get notified as
INDIVIDUAL builds complete).

**It is highly recommended that you either run this command in a ``screen`` or use
``mosh`` to access the build instance. Builds will not finish if the manager is
killed due to disconnection to the instance.**

When you run a build for a particular configuration, a directory named
``LAUNCHTIME-CONFIG_TRIPLET-BUILD_NAME`` is created in ``firesim/deploy/results-build/``.
This directory will contain:

- ``AGFI_INFO``: Describes the state of the AFI being built, while the manager is running. Upon build completion, this contains the AGFI/AFI that was produced, along with its metadata.

- ``cl_firesim:``: This directory is essentially the Vivado project that built the FPGA image, in the state it was in when the Vivado build process completed. This contains reports, stdout from the build, and the final tar file produced by Vivado.

- ``cl_firesim_generated.sv``: This is a copy of the generated verilog used to produce this build. You can also find a copy inside ``cl_firesim``.


.. _firesim-launchrunfarm:

``firesim launchrunfarm``
---------------------------




.. _firesim-infrasetup:

``firesim infrasetup``
-------------------------


.. _firesim-boot:

``firesim boot``
-------------------


.. _firesim-kill:

``firesim kill``
-------------------




.. _firesim-terminaterunfarm:

``firesim terminaterunfarm``
-----------------------------



.. _firesim-runworkload:

``firesim runworkload``
--------------------------


.. _firesim-shareagfi:

``firesim shareagfi``
----------------------


.. _firesim-runcheck:

``firesim runcheck``
----------------------



